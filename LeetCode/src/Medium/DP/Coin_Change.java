package Medium.DP;public class Coin_Change {    public static void main(String[] args) {        int[] arr = {1,2,5};        int target = 11;        System.out.println(coinChange(arr, target));    }    public static int coinChange(int[] coins, int amount){        if(amount < 1) return 0;        return helper(coins, amount, new int[amount]);    }    public static int helper(int[] coins, int amount, int[] counts){        if(amount < 0) return -1;        if(amount == 0) return 0;        if(counts[amount-1] != 0) return counts[amount-1];        int min = Integer.MAX_VALUE;        for(int coin : coins){            int res = helper(coins, amount-coin, counts);            if(res >= 0 && res < min){                min = res + 1;            }        }        counts[amount-1] = min == Integer.MAX_VALUE ? -1 : min;        return counts[amount-1];    }}